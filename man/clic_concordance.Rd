% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/clic_concordance.R
\name{clic_concordance}
\alias{clic_concordance}
\title{Fetch concordance}
\usage{
clic_concordance(
  corpora,
  q,
  subset = "all",
  contextsize = 3,
  metadata = FALSE,
  json = FALSE
)
}
\arguments{
\item{corpora}{1+ corpus name (e.g. 'dickens') or book name ('AgnesG')
to search within}

\item{q}{1+ string to search for. If multiple terms are provided, we will
search for each in turn}

\item{subset}{A string containing Any one of \dQuote{shortsus},
\dQuote{longsus}, \dQuote{nonquote} and \dQuote{quote}.}

\item{contextsize}{Size of context window around search results. Default 3.}

\item{metadata}{Return metadata. TRUE/FALSE.}

\item{json}{JSON format. TRUE/FALSE.}
}
\value{
a \code{data.frame}, one entry per result. Each item is an array with the following items:
  \itemize{
    \item The left context window (if ``contextsize`` > 0, otherwise omitted)
    \item The node (i.e. the text searched for)
    \item The right context window (if ``contextsize`` > 0, otherwise omitted)
    \item Result metadata
    \item Position-in-book metadata
  }
}
\description{
Fetch concordance
}
\seealso{
\url{https://github.com/birmingham-ccr/clic/blob/2.1/server/clic/concordance.py}
}
